#!/usr/bin/python

import urwid
import ConfigParser
import os
import signal
import sys

LOGO='''
-----------------------------------------------------
88  88  dP"Yb  .dP"Y8 888888 8b    d8    db    88b 88
88  88 dP   Yb `Ybo."   88   88b  d88   dPYb   88Yb88
888888 Yb   dP o.`Y8b   88   88YbdP88  dP__Yb  88 Y88
88  88  YbodP  8bodP'   88   88 YY 88 dP""""Yb 88  Y8
-----------------------------------------------------
'''

def sigHandler(signum, frame):
    raise urwid.ExitMainLoop()

def parseConf(confFile):
    cf = ConfigParser.ConfigParser()
    cf.read(confFile)
    s = cf.sections()
    res = []
    for sec in cf.sections():
        hosts = cf.get(sec, 'hosts', [])
        hosts = hosts.split("\n")
        for host in hosts:
            res.append((sec, host))
    return res

def gen_list_item(hosts):
    body = []
    for h in hosts:
        button = urwid.Button(h)
        urwid.connect_signal(button, 'click', on_item_chosen, h)
        body.append(urwid.AttrMap(button, None, focus_map='reversed'))
    return urwid.ListBox(urwid.SimpleFocusListWalker(body))

def on_item_chosen(botton, choice):
    global CMD
    global MSG
    (gateway, host) = choice
    if gateway.lower() == "localhost":
        CMD="ssh %s" % host
        MSG="Connecting to %s\n" % host
    else:
        CMD="ssh -tt %s \"ssh -tt %s\"" % (gateway, host)
        MSG="Connecting to %s via %s\n" % (host, gateway)
    raise urwid.ExitMainLoop()

def on_search_change(edit, text, list):
    button = urwid.Button("")
    del list.body[:]
    for item in hosts:
        (_, host) = item
        if text in host:
            button = urwid.Button(host)
            urwid.connect_signal(button, 'click', on_item_chosen, item)
            list.body.append(urwid.AttrMap(button, None, focus_map='reversed'))

def update_search_edit(key):
    if key == 'esc':
        searchEdit.set_edit_text("")
    else:
        searchEdit.keypress((10, ), key)

def usage():
    print LOGO
    print '''$ hm {enter}

    type to search in your hosts
    esc to clear search text
    enter to visit the selected host
    '''

if len(sys.argv) != 1:
    usage()
    exit()

# install signal handler
signal.signal(signal.SIGINT, sigHandler)

# parse configuration
hosts = parseConf(os.environ['HOME'] + "/.hostman.ini")


CMD=""
MSG=""
LIST = gen_list_item(hosts)


searchEdit = urwid.Edit(LOGO + "Type to search:\n")
urwid.connect_signal(searchEdit, 'change', on_search_change, LIST)

frame = urwid.Frame(LIST, header=searchEdit)

top = urwid.Overlay(
    frame,
    urwid.SolidFill(),
    align='center', width=('relative', 30),
    valign='middle', height=('relative', 60),
    min_width=20, min_height=9)

urwid.MainLoop(
    top,
    palette=[('reversed', 'standout', '')],
    unhandled_input=update_search_edit
    ).run()

if len(CMD) != 0:
    print MSG
    os.system(CMD)
    print "Good by from simple crt."
